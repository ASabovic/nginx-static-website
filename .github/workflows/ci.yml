name: CI Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx-site:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx-site:latest

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
    
      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible
      
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          # ssh-private-key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}
          ssh-private-key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY_2 }}
    
      # Optional: Test SSH connection to the server
      - name: Test SSH Connection
        run: 
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITALOCEAN_VM_IP }} "echo Connection Successful"
    
      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ansible/inventory.ini ansible/install_docker.yml

      # - name: Deploy Docker container
      #   uses: appleboy/ssh-action@v0.1.7
      #   with:
      #     host: ${{ secrets.DIGITALOCEAN_VM_IP }}
      #     username: ${{ secrets.DIGITALOCEAN_VM_USERNAME }}
      #     key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}
      #     port: ${{ secrets.PORT }}
      #     script: |
      #       docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx-site:latest
      #       docker stop my-nginx-container || true
      #       docker rm my-nginx-container || true
      #       docker run -d --name my-nginx-container -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx-site:latest

      - name: Deploy using Docker Compose
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DIGITALOCEAN_VM_IP }}
          username: ${{ secrets.DIGITALOCEAN_VM_USERNAME }}
          # key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}
          key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY_2 }}
          script: |
            export DOCKERHUB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
            cd /root/docker-deployment
            docker-compose down || true
            docker-compose pull
            docker-compose up -d


