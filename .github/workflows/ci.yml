name: CI Workflow

on:
  push: 
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx-site:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx-site:latest
      
      - name: Create Ansible directory on VM
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DIGITALOCEAN_VM_IP }}
          username: ${{ secrets.DIGITALOCEAN_VM_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            mkdir -p ~/ansible
      
      - name: Copy Ansible files to VM
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.DIGITALOCEAN_VM_IP }}
          username: ${{ secrets.DIGITALOCEAN_VM_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          source: 'ansible/*'
          target: '~/ansible/'

      - name: Connect to DigitalOcean VM via SSH and deploy the new Docker image 
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DIGITALOCEAN_VM_IP }}
          username: ${{ secrets.DIGITALOCEAN_VM_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}
          #password: ${{ secrets.DIGITALOCEAN_VM_PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            ansible-playbook -i ~/ansible/ansible/hosts.ini ~/ansible/ansible/install_docker.yml
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx-site:latest
            docker stop my-nginx-container || true
            docker rm my-nginx-container || true
            docker run -d --name my-nginx-container -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/my-nginx-site:latest